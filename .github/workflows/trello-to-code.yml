name: Trello to Code

on:
  issues:
    types: [opened, edited]

jobs:
  trello_to_code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install transformers torch

      - name: Generate Code from Issue Description
        id: generate_code
        run: |
          echo "Issue title: ${{ github.event.issue.title }}"
          echo "Issue body: ${{ github.event.issue.body }}"
          
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_BODY="${{ github.event.issue.body }}"
          FILE_NAME=$(echo "$ISSUE_TITLE" | tr ' ' '_').py

          python3 - <<EOF
import os
from transformers import AutoModelForCausalLM, AutoTokenizer

model_name = "EleutherAI/gpt-neo-125M"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(model_name)

def generate_updated_code(file_name, task_description):
    if os.path.exists(file_name):
        with open(file_name, 'r') as file:
            existing_code = file.read()
    else:
        existing_code = ""

    prompt = (
        f"Here is the existing code:\\n\\n{{existing_code}}\\n\\n"
        f"Here is the task description:\\n\\n{{task_description}}\\n\\n"
        "Please provide only the updated version of the code below:\\n"
        "Updated code:\\n"
    )

    inputs = tokenizer(prompt, return_tensors="pt")
    outputs = model.generate(**inputs, max_length=300)
    generated_code = tokenizer.decode(outputs[0], skip_special_tokens=True)
    updated_code = generated_code.split("Updated code:\\n")[-1].strip()

    return updated_code

file_name = "${FILE_NAME}"
task_description = "${ISSUE_BODY}"
updated_code = generate_updated_code(file_name, task_description)

with open(file_name, 'w') as file:
    file.write(updated_code)

print(f"Updated code written to {{file_name}}:")
print(updated_code)
EOF

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add $(echo "$ISSUE_TITLE" | tr ' ' '_').py
          git commit -m "Update file for issue $ISSUE_TITLE"
          git pull --rebase origin main
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

